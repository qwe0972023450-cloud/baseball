(function(){
const STORAGE_KEY = 'bt_full_save_v1';
function id(){return Math.random().toString(36).slice(2,10);}
function el(id){return document.getElementById(id);}
function now(){return new Date().toISOString();}
const SEED_TEAMS = [{id:'mlb-nyy',name:'New York Yankees'},{id:'mlb-lad',name:'Los Angeles Dodgers'},{id:'npb-han',name:'Hanshin Tigers'},{id:'kbo-ktw',name:'KT Wiz'},{id:'cpbl-ctbc',name:'CTBC Brothers'}];
function seedPlayers(){ const names=['Lin','Chen','Wang','Liu','Huang','Suzuki','Tanaka','Sato','Kim','Park','Lee','Smith']; const pos=['SP','RP','C','1B','2B','SS','3B','LF','CF','RF','DH']; const players=[]; for(const t of SEED_TEAMS){ for(let i=0;i<12;i++){ players.push({ pid: id(), name: names[Math.floor(Math.random()*names.length)]+' '+String.fromCharCode(65+Math.floor(Math.random()*26)), team: t.id, age:18+Math.floor(Math.random()*15), pos: pos[Math.floor(Math.random()*pos.length)], ovr:50+Math.floor(Math.random()*40), pot:60+Math.floor(Math.random()*30), contract:{team:t.id,salary:20000+Math.floor(Math.random()*180000),years:1+Math.floor(Math.random()*3)} }); } } return players; }
let SAVE=null;
function makeNewSave(mode,nick,team){ const p = seedPlayers(); SAVE={ meta:{id:'save-'+Date.now(),created:now(),mode, nickname:nick, team}, assets:{cash:500000,fans:120,prestige:0,stadium:{cap:10000,level:1}}, players:p, offers:[], fixtures:[], league:{}, leaderboard:[], match_state:{inning:1,half:'top',outs:0,bases:[0,0,0],score:{home:0,away:0},log:[]}}; persist(); return SAVE; }
function persist(){ localStorage.setItem(STORAGE_KEY, JSON.stringify(SAVE)); renderAll(); }
function loadSave(){ const s=localStorage.getItem(STORAGE_KEY); if(!s) return null; try{ SAVE=JSON.parse(s); return SAVE;}catch(e){return null;} }
function renderAll(){ renderSaveInfo(); renderFeed(); renderPlayersTable(); renderRoster(); renderOffers(); renderOwner(); renderLeagueFixtures(); renderLeaderboard(); }
function renderSaveInfo(){ if(!SAVE){ el('saveinfo').textContent='未建立存檔'; return;} el('saveinfo').textContent = `${SAVE.meta.nickname} • 模式:${SAVE.meta.mode} • 現金:$${SAVE.assets.cash}`; el('cash').textContent = SAVE.assets.cash; el('fans').textContent = SAVE.assets.fans; el('prestige').textContent = SAVE.assets.prestige; }
function pushFeed(txt){ if(!SAVE) return; SAVE.match_state.log.push(txt); if(SAVE.match_state.log.length>200) SAVE.match_state.log.shift(); persist(); }
function renderFeed(){ if(!SAVE){ el('feed').innerHTML='未開始'; return;} el('feed').innerHTML = SAVE.match_state.log.slice(-60).map(l=>`<p>${l}</p>`).join(''); }
function pitchOutcome(){ const r=Math.random(); if(r<0.06) return ['HR','轟！全壘打！']; if(r<0.18) return ['H','安打！']; if(r<0.22) return ['BB','保送。']; if(r<0.25) return ['HBP','觸身球上壘。']; if(r<0.60) return ['OUT','出局。']; return ['K','三振！']; }
function advanceRunners(b,n){ let runs=0; for(let i=0;i<n;i++){ if(b[2]==1) runs++; b[2]=b[1]; b[1]=b[0]; b[0]=1;} return runs; }
function applyOutcome(state,outcome){ const b=state.bases; if(outcome==='HR'){ const runs=1+b[0]+b[1]+b[2]; state.bases=[0,0,0]; const key=state.half==='bot'?'home':'away'; state.score[key]+=runs; pushFeed(`${_side(state)} 轟出全壘打，${runs}分！`); } else if(outcome==='H'){ const runs=advanceRunners(b,1); const key=state.half==='bot'?'home':'away'; state.score[key]+=runs; pushFeed(`${_side(state)} 擊出安打${runs?('，得'+runs+'分'):'。'}`); } else if(outcome==='BB'||outcome==='HBP'){ if(b[0]==1&&b[1]==1&&b[2]==1){ const key=state.half==='bot'?'home':'away'; state.score[key]+=1; pushFeed(`${_side(state)} 擠回一分！`);} else { if(b[0]==1&&b[1]==1&&b[2]==0) b[2]=1; else if(b[0]==1&&b[1]==0) b[1]=1; else if(b[0]==0) b[0]=1; pushFeed(`${_side(state)} 上壘（保送/觸身）。`);} } else { state.outs+=1; pushFeed(`${_side(state)} 出局，目前 ${state.outs} 出。`); if(state.outs>=3){ state.outs=0; state.bases=[0,0,0]; if(state.half==='top') state.half='bot'; else{ state.half='top'; state.inning+=1; } pushFeed(`半局結束，進入第${state.inning} 局${state.half==='top'?'上':'下'}。`); } } persist(); }
function _side(s){ return s.half==='top'?'客隊':'主隊'; }
function renderPlayersTable(q){ if(!SAVE){ el('playersTable').querySelector('tbody').innerHTML=''; return; } q=(q||'').toLowerCase(); const rows = SAVE.players.filter(p=>p.name.toLowerCase().includes(q)).map(p=>`<tr><td>${p.name}</td><td>${p.pos}</td><td>${p.ovr}</td><td><button class='small' data-pid='${p.pid}' onclick="window.sendOfferPrompt('${p.pid}')">發約</button></td></tr>`).join(''); el('playersTable').querySelector('tbody').innerHTML = rows; }
function renderOffers(){ if(!SAVE){ el('offersBox').innerHTML='無'; return; } const html=SAVE.offers.map(o=>`<div>offer:${o.offer_id} to ${o.to_player} salary:${o.salary} yrs:${o.years} <button onclick="window.acceptOffer('${o.offer_id}')">接受</button></div>`).join(''); el('offersBox').innerHTML = html || '無'; }
function createOffer(from,to_player,salary,years){ if(!SAVE) return; const offer={offer_id:id(),from:from||SAVE.meta.id,to_player,salary,years,created:now()}; SAVE.offers.push(offer); persist(); return offer; }
window.sendOfferPrompt = function(pid){ el('offerPid').value = pid; el('offerSal').focus(); }
window.acceptOffer = function(offer_id){ if(!SAVE) return; const idx = SAVE.offers.findIndex(o=>o.offer_id===offer_id); if(idx<0) return alert('找不到offer'); const offer = SAVE.offers[idx]; const pl = SAVE.players.find(x=>x.pid===offer.to_player); if(!pl) return alert('player not found'); pl.team = offer.from; pl.contract = {team:offer.from,salary:offer.salary,years:offer.years}; SAVE.offers.splice(idx,1); persist(); alert('已接受合約'); }
function trainPlayer(pid,hours){ if(!SAVE) return {ok:false}; const pl = SAVE.players.find(p=>p.pid===pid); if(!pl) return {ok:false}; const base=0.05*hours; const agePenalty=Math.max(0,(pl.age-24)*0.002*hours); const delta=Math.max(0,Math.floor((base-agePenalty)*10)); pl.ovr=Math.min(99,pl.ovr+delta); if(Math.random()<0.03) pl.pot=Math.min(99,pl.pot+1); persist(); return {ok:true,delta,player:pl}; }
function renderRoster(){ if(!SAVE){ el('rosterTable').querySelector('tbody').innerHTML=''; return; } const rows = SAVE.players.slice(0,30).map(p=>`<tr><td>${p.pid}</td><td>${p.name}</td><td>${p.age}</td><td>${p.ovr}</td></tr>`).join(''); el('rosterTable').querySelector('tbody').innerHTML = rows; }
function renderOwner(){ if(!SAVE) return; el('cash').textContent = SAVE.assets.cash; el('fans').textContent = SAVE.assets.fans; el('prestige').textContent = SAVE.assets.prestige; }
function sellSponsorship(amount){ if(!SAVE) return; const factor=0.8+Math.random()*0.8; const gain=Math.floor(amount*factor); SAVE.assets.cash+=gain; SAVE.assets.prestige+=Math.floor(gain/100000); persist(); alert('贊助成交 $'+gain); }
function upgradeStadium(level,cost){ if(!SAVE) return alert('no save'); if(SAVE.assets.cash<cost) return alert('現金不足'); SAVE.assets.cash-=cost; SAVE.assets.stadium.level=(SAVE.assets.stadium.level||1)+Number(level); SAVE.assets.stadium.cap=SAVE.assets.stadium.cap+Number(level)*2000; persist(); alert('升級成功'); }
function generateSchedule(teamIds,season){ const ids=teamIds.slice(); if(ids.length%2===1) ids.push('BYE'); const n=ids.length; const rounds=n-1; let arr=ids.slice(); const fixtures=[]; let day=1; for(let r=0;r<rounds;r++){ for(let i=0;i<n/2;i++){ const a=arr[i], b=arr[n-1-i]; if(a!=='BYE' && b!=='BYE'){ fixtures.push({fid:id(),day:day,home:a,away:b,season}); } day++; } arr=[arr[0]].concat([arr[arr.length-1]]).concat(arr.slice(1,arr.length-1)); } SAVE.fixtures=fixtures; persist(); return fixtures; }
function renderLeagueFixtures(){ if(!SAVE||!SAVE.fixtures) { el('fixturesBox').textContent='無賽程'; return;} el('fixturesBox').textContent='賽程:'+SAVE.fixtures.length+' 場'; }
function runSeasonSim(){ if(!SAVE||!SAVE.fixtures) return alert('先產生賽程'); const teams={}; for(const f of SAVE.fixtures){ teams[f.home]=teams[f.home]||{id:f.home,pts:0,w:0,l:0,gd:0}; teams[f.away]=teams[f.away]||{id:f.away,pts:0,w:0,l:0,gd:0}; const ha=Math.floor(Math.random()*6); const aa=Math.floor(Math.random()*6); if(ha>aa){ teams[f.home].w++; teams[f.home].pts+=2; teams[f.away].l++; } else if(aa>ha){ teams[f.away].w++; teams[f.away].pts+=2; teams[f.home].l++; } else { teams[f.home].pts+=1; teams[f.away].pts+=1; } teams[f.home].gd+=ha-aa; teams[f.away].gd+=aa-ha; } const table=Object.values(teams).sort((a,b)=>b.pts-a.pts||b.gd-a.gd); SAVE.league.table=table; persist(); el('leagueTable').innerHTML='<ol>'+table.map(t=>`<li>${t.id} • ${t.pts} pts (W:${t.w} L:${t.l})</li>`).join('')+'</ol>'; if(table.length){ SAVE.leaderboard.unshift({team:table[0].id,season:SAVE.meta.season||new Date().getFullYear(),date:now()}); if(SAVE.leaderboard.length>50) SAVE.leaderboard.pop(); persist(); } }
function renderLeaderboard(){ el('localLeaderboard').innerHTML = (SAVE && SAVE.leaderboard && SAVE.leaderboard.length)? SAVE.leaderboard.slice(0,10).map((l,i)=>`<div>${i+1}. ${l.team} (${l.season})</div>`).join('') : '無本機資料'; }
async function pushGist(token){ if(!SAVE) return alert('no save'); if(!token) return alert('需提供 token'); const url='https://api.github.com/gists'; const body={ "public": false, "files": { "bt_leaderboard.json": {"content": JSON.stringify(SAVE.leaderboard,null,2)}}, "description":"BaseballTycoon leaderboard" }; const resp=await fetch(url,{method:'POST',headers:{'Authorization':'token '+token,'Content-Type':'application/json'},body:JSON.stringify(body)}); if(resp.ok){ const j=await resp.json(); alert('上傳成功: '+j.html_url); } else { alert('上傳失敗'); } }
async function pullGist(token){ if(!token) return alert('需提供 token'); const url='https://api.github.com/gists'; const resp=await fetch(url,{headers:{'Authorization':'token '+token}}); if(resp.ok){ const js=await resp.json(); for(const g of js){ try{ const files=g.files; if(files['bt_leaderboard.json']){ const content=JSON.parse(files['bt_leaderboard.json'].content); SAVE.leaderboard=content; persist(); alert('下載完成'); return; } }catch(e){} } alert('找不到 leaderboard gist'); } else alert('取得 gist 失敗'); }
window.addEventListener('load',()=>{ document.querySelectorAll('.tab').forEach(t=>t.addEventListener('click',()=>{ document.querySelectorAll('.panel').forEach(p=>p.style.display='none'); document.querySelectorAll('.tab').forEach(x=>x.classList.remove('active')); t.classList.add('active'); document.getElementById(t.dataset.tab).style.display='flex'; })); el('start').addEventListener('click',()=>{ const nick=el('nickname').value||'Player'; const mode=el('mode').value; const team=el('team').value; makeNewSave(mode,nick,team); }); el('load').addEventListener('click',()=>{ loadSave()||alert('無存檔'); renderAll(); }); el('pitch').addEventListener('click',()=>{ if(!SAVE) return alert('先建立存檔'); const [o,t]=pitchOutcome(); applyOutcome(SAVE.match_state,o); renderAll(); }); el('autoPlay').addEventListener('click',()=>{ if(!SAVE) return alert('先建立存檔'); if(window._auto){ clearInterval(window._auto); window._auto=null; el('autoPlay').textContent='自動'; } else { window._auto = setInterval(()=>el('pitch').click(),700); el('autoPlay').textContent='停止'; } }); el('resetMatch').addEventListener('click',()=>{ if(!SAVE) return; SAVE.match_state={inning:1,half:'top',outs:0,bases:[0,0,0],score:{home:0,away:0},log:[]}; persist(); }); el('searchBtn').addEventListener('click',()=>{ renderPlayersTable(el('searchName').value); }); el('listAll').addEventListener('click',()=>{ renderPlayersTable(''); }); el('sendOffer').addEventListener('click',()=>{ if(!SAVE) return alert('no save'); const pid=el('offerPid').value; const sal=Number(el('offerSal').value||0); const yrs=Number(el('offerYears').value||1); if(!pid) return alert('pid required'); createOffer(SAVE.meta.id,pid,sal,yrs); alert('已發送'); renderOffers(); }); el('refreshOffers').addEventListener('click',()=>renderOffers()); el('trainBtn').addEventListener('click',()=>{ const pid=el('careerPid').value; const hrs=Number(el('trainHours').value||1); const res=trainPlayer(pid,hrs); if(!res.ok) return alert('訓練失敗'); el('careerResult').textContent = `訓練 +${res.delta} -> OVR ${res.player.ovr}`; renderRoster(); }); el('viewStats').addEventListener('click',()=>{ const pid=el('careerPid').value; const p = SAVE.players.find(x=>x.pid===pid); if(!p) return alert('找不到'); alert(JSON.stringify(p,null,2)); }); el('setTicket').addEventListener('click',()=>{ if(!SAVE) return; SAVE.assets.ticket = Number(el('ticketPrice').value||20); SAVE.assets.stadium.cap = Number(el('stadiumCap').value||10000); persist(); alert('設定已儲存'); }); el('sellSponsor').addEventListener('click',()=>{ const amt=50000; sellSponsorship(amt); }); el('upgradeBtn').addEventListener('click',()=>{ const lvl=Number(el('upgradeLevel').value||1); const cost=Number(el('upgradeCost').value||100000); upgradeStadium(lvl,cost); }); el('genSchedule').addEventListener('click',()=>{ const ids=el('leagueTeams').value.split(',').map(s=>s.trim()).filter(Boolean); const season=Number(el('leagueSeason').value||2025); generateSchedule(ids,season); alert('已產生 '+(SAVE.fixtures?SAVE.fixtures.length:0)+' 場'); renderLeagueFixtures(); }); el('runSeason').addEventListener('click',()=>{ runSeasonSim(); }); el('pushGist').addEventListener('click',()=>{ const t=el('gistToken').value.trim(); if(!t) return alert('請輸入 token'); pushGist(t); }); el('pullGist').addEventListener('click',()=>{ const t=el('gistToken').value.trim(); if(!t) return alert('請輸入 token'); pullGist(t); }); el('exportSave').addEventListener('click',()=>{ if(!SAVE) return alert('沒有存檔'); const blob=new Blob([JSON.stringify(SAVE,null,2)],{type:'application/json'}); const url=URL.createObjectURL(blob); const a=document.createElement('a'); a.href=url; a.download=SAVE.meta.id+'.json'; a.click(); URL.revokeObjectURL(url); }); el('importSave').addEventListener('click',()=>el('importFile').click()); el('importFile').addEventListener('change', (e)=>{ const f=e.target.files[0]; if(!f) return; const r=new FileReader(); r.onload=()=>{ try{ SAVE=JSON.parse(r.result); persist(); alert('載入完成'); }catch(e){ alert('格式錯誤'); } }; r.readAsText(f); }); window.acceptOffer=acceptOffer; window.sendOfferPrompt=function(pid){ el('offerPid').value=pid; el('offerSal').focus(); }; if(!loadSave()){ /* no save */ } renderAll(); });